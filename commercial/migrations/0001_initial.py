# Generated by Django 3.2.5 on 2021-07-02 18:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import mptt.fields
import sorl.thumbnail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.CharField(max_length=25, primary_key=True, serialize=False)),
                ('image', sorl.thumbnail.fields.ImageField(upload_to='upload/foto/', verbose_name='image')),
            ],
            options={
                'verbose_name': 'article',
                'verbose_name_plural': 'articles',
            },
        ),
        migrations.CreateModel(
            name='ArticleImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', sorl.thumbnail.fields.ImageField(upload_to='upload/foto/', verbose_name='image')),
            ],
            options={
                'verbose_name': 'image',
                'verbose_name_plural': 'images',
            },
        ),
        migrations.CreateModel(
            name='ArticleProperties',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('published', models.BooleanField(default=True, verbose_name='published')),
                ('price', models.DecimalField(decimal_places=3, default=0, max_digits=10, verbose_name='price')),
            ],
            options={
                'verbose_name': 'category property',
                'verbose_name_plural': 'category properties',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.CharField(max_length=25, primary_key=True, serialize=False)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='CategoryProperties',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('published', models.BooleanField(default=True, verbose_name='published')),
            ],
            options={
                'verbose_name': 'category property',
                'verbose_name_plural': 'category properties',
            },
        ),
        migrations.CreateModel(
            name='Departament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', django_countries.fields.CountryField(max_length=2, verbose_name='country')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
            ],
            options={
                'verbose_name': 'departament',
                'verbose_name_plural': 'departments',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='date')),
                ('comment', models.TextField(default='')),
                ('is_closed', models.BooleanField(default=False, verbose_name='closed')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'order',
                'verbose_name_plural': 'orders',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveIntegerField(default=0, verbose_name='count')),
                ('price', models.DecimalField(decimal_places=3, default=0, max_digits=10, verbose_name='price')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='commercial.article', verbose_name='article')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='commercial.order', verbose_name='order')),
            ],
            options={
                'verbose_name': 'order item',
                'verbose_name_plural': 'order items',
            },
        ),
        migrations.AddConstraint(
            model_name='departament',
            constraint=models.UniqueConstraint(fields=('country', 'email'), name='unique_department'),
        ),
        migrations.AddField(
            model_name='categoryproperties',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='commercial.category'),
        ),
        migrations.AddField(
            model_name='categoryproperties',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='commercial.departament'),
        ),
        migrations.AddField(
            model_name='category',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='commercial.category', verbose_name='parent'),
        ),
        migrations.AddField(
            model_name='category',
            name='property',
            field=models.ManyToManyField(through='commercial.CategoryProperties', to='commercial.Departament', verbose_name='property'),
        ),
        migrations.AddField(
            model_name='articleproperties',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='commercial.article'),
        ),
        migrations.AddField(
            model_name='articleproperties',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='commercial.departament'),
        ),
        migrations.AddField(
            model_name='articleimage',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='commercial.article', verbose_name='article'),
        ),
        migrations.AddField(
            model_name='article',
            name='category',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='commercial.category', verbose_name='category'),
        ),
        migrations.AddField(
            model_name='article',
            name='property',
            field=models.ManyToManyField(through='commercial.ArticleProperties', to='commercial.Departament', verbose_name='property'),
        ),
        migrations.AddConstraint(
            model_name='orderitem',
            constraint=models.UniqueConstraint(fields=('order', 'article'), name='unique_order_item'),
        ),
        migrations.AddConstraint(
            model_name='order',
            constraint=models.UniqueConstraint(condition=models.Q(('is_closed', False)), fields=('user',), name='unique_open_order'),
        ),
        migrations.AddConstraint(
            model_name='categoryproperties',
            constraint=models.UniqueConstraint(fields=('department', 'category'), name='unique_category_property'),
        ),
        migrations.AddConstraint(
            model_name='articleproperties',
            constraint=models.UniqueConstraint(fields=('department', 'article'), name='unique_article_property'),
        ),
    ]
